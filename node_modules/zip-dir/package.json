{
  "name": "zip-dir",
  "version": "0.1.4",
  "description": "Zips up directories into buffers or saves zipped files to disk",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/.bin/mocha --reporter spec --ui bdd"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/jsantell/node-zip-dir"
  },
  "author": {
    "name": "Jordan Santell"
  },
  "devDependencies": {
    "mocha": "*",
    "chai": "*",
    "buffer-equal": "*",
    "unzip": "*",
    "fs-extra": "*"
  },
  "license": "MIT",
  "readme": "# zip-dir\n\nZips up a directory and saves the zip to disk or returns as a buffer.\n\n[![Build Status](https://travis-ci.org/jsantell/node-zip-dir.png)](https://travis-ci.org/jsantell/node-zip-dir)\n\n## example\n\n```\nvar zipdir = require('zip-dir');\n\nzipdir('/path/to/be/zipped', function (err, buffer) {\n  // `buffer` is the buffer of the zipped file\n});\n\nzipdir('/path/to/be/zipped', '~/myzip.zip', function (err, buffer) {\n  // `buffer` is the buffer of the zipped file\n  // And the buffer was saved to `~/myzip.zip`\n});\n```\n\n## methods\n\n```\nvar zipdir = require('zip-dir');\n```\n\n### zipdir(dirPath, [savePath], callback)\n\nZips up `dirPath` recursively preserving directory structure and returns\nthe compressed buffer into `callback` on success. If `savePath` defined, the\nbuffer will also be saved to disk at that path, with the callback also firing\nupon completion with the buffer.\n\n## install\n\n```\n$ npm install zip-dir\n```\n\n## license\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jsantell/node-zip-dir/issues"
  },
  "homepage": "https://github.com/jsantell/node-zip-dir",
  "_id": "zip-dir@0.1.4",
  "dist": {
    "shasum": "95c6545d254098aff305e26912f47830381c58f8"
  },
  "_from": "zip-dir@~0.1.4",
  "_resolved": "http://registry.npmjs.org/zip-dir/-/zip-dir-0.1.4.tgz"
}
